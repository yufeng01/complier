// Generated from MiniJava.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MiniJavaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__19=1, T__18=2, T__17=3, T__16=4, T__15=5, T__14=6, T__13=7, T__12=8, 
		T__11=9, T__10=10, T__9=11, T__8=12, T__7=13, T__6=14, T__5=15, T__4=16, 
		T__3=17, T__2=18, T__1=19, T__0=20, AND=21, LT=22, PLUS=23, MINUS=24, 
		TIMES=25, POWER=26, NOT=27, LSB=28, RSB=29, DOTLENGTH=30, LP=31, RP=32, 
		RETURN=33, EQ=34, BooleanLiteral=35, Identifier=36, IntegerLiteral=37, 
		WS=38, MULTILINE_COMMENT=39, LINE_COMMENT=40;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('"
	};
	public static final String[] ruleNames = {
		"T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", 
		"T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", 
		"T__2", "T__1", "T__0", "AND", "LT", "PLUS", "MINUS", "TIMES", "POWER", 
		"NOT", "LSB", "RSB", "DOTLENGTH", "LP", "RP", "RETURN", "EQ", "BooleanLiteral", 
		"Identifier", "JavaLetter", "JavaLetterOrDigit", "IntegerLiteral", "DecimalIntegerLiteral", 
		"IntegertypeSuffix", "DecimalNumeral", "Digits", "Digit", "NonZeroDigit", 
		"DigitsAndUnderscores", "DigitOrUnderscore", "Underscores", "WS", "MULTILINE_COMMENT", 
		"LINE_COMMENT"
	};


	public MiniJavaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MiniJava.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2*\u0166\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3"+
		"\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5"+
		"\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\t\3"+
		"\t\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f"+
		"\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3"+
		"\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\22\3"+
		"\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3"+
		"\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\34\3"+
		"\34\3\35\3\35\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 "+
		"\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3$\5"+
		"$\u0109\n$\3%\3%\7%\u010d\n%\f%\16%\u0110\13%\3&\3&\3\'\3\'\3(\3(\3)\3"+
		")\5)\u011a\n)\3*\3*\3+\3+\3+\5+\u0121\n+\3+\3+\3+\5+\u0126\n+\5+\u0128"+
		"\n+\3,\3,\5,\u012c\n,\3,\5,\u012f\n,\3-\3-\5-\u0133\n-\3.\3.\3/\6/\u0138"+
		"\n/\r/\16/\u0139\3\60\3\60\5\60\u013e\n\60\3\61\6\61\u0141\n\61\r\61\16"+
		"\61\u0142\3\62\6\62\u0146\n\62\r\62\16\62\u0147\3\62\3\62\3\63\3\63\3"+
		"\63\3\63\7\63\u0150\n\63\f\63\16\63\u0153\13\63\3\63\3\63\3\63\3\63\3"+
		"\63\3\64\3\64\3\64\3\64\7\64\u015e\n\64\f\64\16\64\u0161\13\64\3\64\3"+
		"\64\3\64\3\64\4\u0151\u015f\2\65\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23"+
		"\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31"+
		"\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\2M\2O\'Q\2S\2U\2W\2Y"+
		"\2[\2]\2_\2a\2c(e)g*\3\2\7\6\2&&C\\aac|\7\2&&\62;C\\aac|\4\2NNnn\3\2\63"+
		";\5\2\13\f\17\17\"\"\u0169\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2"+
		"\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2"+
		"\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3"+
		"\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2"+
		"\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67"+
		"\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2"+
		"\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2O\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2"+
		"\2g\3\2\2\2\3i\3\2\2\2\5n\3\2\2\2\7v\3\2\2\2\tz\3\2\2\2\13\u008d\3\2\2"+
		"\2\r\u0093\3\2\2\2\17\u0099\3\2\2\2\21\u009b\3\2\2\2\23\u00a0\3\2\2\2"+
		"\25\u00a2\3\2\2\2\27\u00a9\3\2\2\2\31\u00b1\3\2\2\2\33\u00b3\3\2\2\2\35"+
		"\u00ba\3\2\2\2\37\u00bd\3\2\2\2!\u00c4\3\2\2\2#\u00c8\3\2\2\2%\u00cd\3"+
		"\2\2\2\'\u00d2\3\2\2\2)\u00d4\3\2\2\2+\u00d6\3\2\2\2-\u00d9\3\2\2\2/\u00db"+
		"\3\2\2\2\61\u00dd\3\2\2\2\63\u00df\3\2\2\2\65\u00e1\3\2\2\2\67\u00e4\3"+
		"\2\2\29\u00e6\3\2\2\2;\u00e8\3\2\2\2=\u00ea\3\2\2\2?\u00f2\3\2\2\2A\u00f4"+
		"\3\2\2\2C\u00f6\3\2\2\2E\u00fd\3\2\2\2G\u0108\3\2\2\2I\u010a\3\2\2\2K"+
		"\u0111\3\2\2\2M\u0113\3\2\2\2O\u0115\3\2\2\2Q\u0117\3\2\2\2S\u011b\3\2"+
		"\2\2U\u0127\3\2\2\2W\u0129\3\2\2\2Y\u0132\3\2\2\2[\u0134\3\2\2\2]\u0137"+
		"\3\2\2\2_\u013d\3\2\2\2a\u0140\3\2\2\2c\u0145\3\2\2\2e\u014b\3\2\2\2g"+
		"\u0159\3\2\2\2ij\7o\2\2jk\7c\2\2kl\7k\2\2lm\7p\2\2m\4\3\2\2\2no\7d\2\2"+
		"op\7q\2\2pq\7q\2\2qr\7n\2\2rs\7g\2\2st\7c\2\2tu\7p\2\2u\6\3\2\2\2vw\7"+
		"p\2\2wx\7g\2\2xy\7y\2\2y\b\3\2\2\2z{\7U\2\2{|\7{\2\2|}\7u\2\2}~\7v\2\2"+
		"~\177\7g\2\2\177\u0080\7o\2\2\u0080\u0081\7\60\2\2\u0081\u0082\7q\2\2"+
		"\u0082\u0083\7w\2\2\u0083\u0084\7v\2\2\u0084\u0085\7\60\2\2\u0085\u0086"+
		"\7r\2\2\u0086\u0087\7t\2\2\u0087\u0088\7k\2\2\u0088\u0089\7p\2\2\u0089"+
		"\u008a\7v\2\2\u008a\u008b\7n\2\2\u008b\u008c\7p\2\2\u008c\n\3\2\2\2\u008d"+
		"\u008e\7e\2\2\u008e\u008f\7n\2\2\u008f\u0090\7c\2\2\u0090\u0091\7u\2\2"+
		"\u0091\u0092\7u\2\2\u0092\f\3\2\2\2\u0093\u0094\7y\2\2\u0094\u0095\7j"+
		"\2\2\u0095\u0096\7k\2\2\u0096\u0097\7n\2\2\u0097\u0098\7g\2\2\u0098\16"+
		"\3\2\2\2\u0099\u009a\7=\2\2\u009a\20\3\2\2\2\u009b\u009c\7x\2\2\u009c"+
		"\u009d\7q\2\2\u009d\u009e\7k\2\2\u009e\u009f\7f\2\2\u009f\22\3\2\2\2\u00a0"+
		"\u00a1\7}\2\2\u00a1\24\3\2\2\2\u00a2\u00a3\7U\2\2\u00a3\u00a4\7v\2\2\u00a4"+
		"\u00a5\7t\2\2\u00a5\u00a6\7k\2\2\u00a6\u00a7\7p\2\2\u00a7\u00a8\7i\2\2"+
		"\u00a8\26\3\2\2\2\u00a9\u00aa\7g\2\2\u00aa\u00ab\7z\2\2\u00ab\u00ac\7"+
		"v\2\2\u00ac\u00ad\7g\2\2\u00ad\u00ae\7p\2\2\u00ae\u00af\7f\2\2\u00af\u00b0"+
		"\7u\2\2\u00b0\30\3\2\2\2\u00b1\u00b2\7\177\2\2\u00b2\32\3\2\2\2\u00b3"+
		"\u00b4\7r\2\2\u00b4\u00b5\7w\2\2\u00b5\u00b6\7d\2\2\u00b6\u00b7\7n\2\2"+
		"\u00b7\u00b8\7k\2\2\u00b8\u00b9\7e\2\2\u00b9\34\3\2\2\2\u00ba\u00bb\7"+
		"k\2\2\u00bb\u00bc\7h\2\2\u00bc\36\3\2\2\2\u00bd\u00be\7u\2\2\u00be\u00bf"+
		"\7v\2\2\u00bf\u00c0\7c\2\2\u00c0\u00c1\7v\2\2\u00c1\u00c2\7k\2\2\u00c2"+
		"\u00c3\7e\2\2\u00c3 \3\2\2\2\u00c4\u00c5\7k\2\2\u00c5\u00c6\7p\2\2\u00c6"+
		"\u00c7\7v\2\2\u00c7\"\3\2\2\2\u00c8\u00c9\7g\2\2\u00c9\u00ca\7n\2\2\u00ca"+
		"\u00cb\7u\2\2\u00cb\u00cc\7g\2\2\u00cc$\3\2\2\2\u00cd\u00ce\7v\2\2\u00ce"+
		"\u00cf\7j\2\2\u00cf\u00d0\7k\2\2\u00d0\u00d1\7u\2\2\u00d1&\3\2\2\2\u00d2"+
		"\u00d3\7.\2\2\u00d3(\3\2\2\2\u00d4\u00d5\7\60\2\2\u00d5*\3\2\2\2\u00d6"+
		"\u00d7\7(\2\2\u00d7\u00d8\7(\2\2\u00d8,\3\2\2\2\u00d9\u00da\7>\2\2\u00da"+
		".\3\2\2\2\u00db\u00dc\7-\2\2\u00dc\60\3\2\2\2\u00dd\u00de\7/\2\2\u00de"+
		"\62\3\2\2\2\u00df\u00e0\7,\2\2\u00e0\64\3\2\2\2\u00e1\u00e2\7,\2\2\u00e2"+
		"\u00e3\7,\2\2\u00e3\66\3\2\2\2\u00e4\u00e5\7#\2\2\u00e58\3\2\2\2\u00e6"+
		"\u00e7\7]\2\2\u00e7:\3\2\2\2\u00e8\u00e9\7_\2\2\u00e9<\3\2\2\2\u00ea\u00eb"+
		"\7\60\2\2\u00eb\u00ec\7n\2\2\u00ec\u00ed\7g\2\2\u00ed\u00ee\7p\2\2\u00ee"+
		"\u00ef\7i\2\2\u00ef\u00f0\7v\2\2\u00f0\u00f1\7j\2\2\u00f1>\3\2\2\2\u00f2"+
		"\u00f3\7*\2\2\u00f3@\3\2\2\2\u00f4\u00f5\7+\2\2\u00f5B\3\2\2\2\u00f6\u00f7"+
		"\7t\2\2\u00f7\u00f8\7g\2\2\u00f8\u00f9\7v\2\2\u00f9\u00fa\7w\2\2\u00fa"+
		"\u00fb\7t\2\2\u00fb\u00fc\7p\2\2\u00fcD\3\2\2\2\u00fd\u00fe\7?\2\2\u00fe"+
		"F\3\2\2\2\u00ff\u0100\7v\2\2\u0100\u0101\7t\2\2\u0101\u0102\7w\2\2\u0102"+
		"\u0109\7g\2\2\u0103\u0104\7h\2\2\u0104\u0105\7c\2\2\u0105\u0106\7n\2\2"+
		"\u0106\u0107\7u\2\2\u0107\u0109\7g\2\2\u0108\u00ff\3\2\2\2\u0108\u0103"+
		"\3\2\2\2\u0109H\3\2\2\2\u010a\u010e\5K&\2\u010b\u010d\5M\'\2\u010c\u010b"+
		"\3\2\2\2\u010d\u0110\3\2\2\2\u010e\u010c\3\2\2\2\u010e\u010f\3\2\2\2\u010f"+
		"J\3\2\2\2\u0110\u010e\3\2\2\2\u0111\u0112\t\2\2\2\u0112L\3\2\2\2\u0113"+
		"\u0114\t\3\2\2\u0114N\3\2\2\2\u0115\u0116\5Q)\2\u0116P\3\2\2\2\u0117\u0119"+
		"\5U+\2\u0118\u011a\5S*\2\u0119\u0118\3\2\2\2\u0119\u011a\3\2\2\2\u011a"+
		"R\3\2\2\2\u011b\u011c\t\4\2\2\u011cT\3\2\2\2\u011d\u0128\7\62\2\2\u011e"+
		"\u0125\5[.\2\u011f\u0121\5W,\2\u0120\u011f\3\2\2\2\u0120\u0121\3\2\2\2"+
		"\u0121\u0126\3\2\2\2\u0122\u0123\5a\61\2\u0123\u0124\5W,\2\u0124\u0126"+
		"\3\2\2\2\u0125\u0120\3\2\2\2\u0125\u0122\3\2\2\2\u0126\u0128\3\2\2\2\u0127"+
		"\u011d\3\2\2\2\u0127\u011e\3\2\2\2\u0128V\3\2\2\2\u0129\u012e\5Y-\2\u012a"+
		"\u012c\5]/\2\u012b\u012a\3\2\2\2\u012b\u012c\3\2\2\2\u012c\u012d\3\2\2"+
		"\2\u012d\u012f\5Y-\2\u012e\u012b\3\2\2\2\u012e\u012f\3\2\2\2\u012fX\3"+
		"\2\2\2\u0130\u0133\7\62\2\2\u0131\u0133\5[.\2\u0132\u0130\3\2\2\2\u0132"+
		"\u0131\3\2\2\2\u0133Z\3\2\2\2\u0134\u0135\t\5\2\2\u0135\\\3\2\2\2\u0136"+
		"\u0138\5_\60\2\u0137\u0136\3\2\2\2\u0138\u0139\3\2\2\2\u0139\u0137\3\2"+
		"\2\2\u0139\u013a\3\2\2\2\u013a^\3\2\2\2\u013b\u013e\5Y-\2\u013c\u013e"+
		"\7a\2\2\u013d\u013b\3\2\2\2\u013d\u013c\3\2\2\2\u013e`\3\2\2\2\u013f\u0141"+
		"\7a\2\2\u0140\u013f\3\2\2\2\u0141\u0142\3\2\2\2\u0142\u0140\3\2\2\2\u0142"+
		"\u0143\3\2\2\2\u0143b\3\2\2\2\u0144\u0146\t\6\2\2\u0145\u0144\3\2\2\2"+
		"\u0146\u0147\3\2\2\2\u0147\u0145\3\2\2\2\u0147\u0148\3\2\2\2\u0148\u0149"+
		"\3\2\2\2\u0149\u014a\b\62\2\2\u014ad\3\2\2\2\u014b\u014c\7\61\2\2\u014c"+
		"\u014d\7,\2\2\u014d\u0151\3\2\2\2\u014e\u0150\13\2\2\2\u014f\u014e\3\2"+
		"\2\2\u0150\u0153\3\2\2\2\u0151\u0152\3\2\2\2\u0151\u014f\3\2\2\2\u0152"+
		"\u0154\3\2\2\2\u0153\u0151\3\2\2\2\u0154\u0155\7,\2\2\u0155\u0156\7\61"+
		"\2\2\u0156\u0157\3\2\2\2\u0157\u0158\b\63\2\2\u0158f\3\2\2\2\u0159\u015a"+
		"\7\61\2\2\u015a\u015b\7\61\2\2\u015b\u015f\3\2\2\2\u015c\u015e\13\2\2"+
		"\2\u015d\u015c\3\2\2\2\u015e\u0161\3\2\2\2\u015f\u0160\3\2\2\2\u015f\u015d"+
		"\3\2\2\2\u0160\u0162\3\2\2\2\u0161\u015f\3\2\2\2\u0162\u0163\7\f\2\2\u0163"+
		"\u0164\3\2\2\2\u0164\u0165\b\64\2\2\u0165h\3\2\2\2\22\2\u0108\u010e\u0119"+
		"\u0120\u0125\u0127\u012b\u012e\u0132\u0139\u013d\u0142\u0147\u0151\u015f"+
		"\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}